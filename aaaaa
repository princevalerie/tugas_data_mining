{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/princevalerie/tugas_data_mining/blob/main/decisiontree.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gzaLkNeR8CoA"
      },
      "source": [
        "abc"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "B9TJC2Ib_r8i"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import re\n",
        "sns.set()\n",
        "from scipy import stats"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "EnQj9fL3Vb3D"
      },
      "outputs": [],
      "source": [
        "data= pd.read_csv(\"/content/heart_attack.csv\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Xhfqgzi182mO"
      },
      "source": [
        "# **MEMBACA dan VISUALISASI DATA**\n",
        "➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖\n",
        "\n",
        "### Ambil 10 data teratas"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "lP0DgWiV_fV0",
        "outputId": "47021685-7774-4a3b-f870-9fbd08693ac0"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-2da47f47-5f72-4172-b39c-58f431b7caee\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>gender</th>\n",
              "      <th>impluse</th>\n",
              "      <th>pressurehight</th>\n",
              "      <th>pressurelow</th>\n",
              "      <th>glucose</th>\n",
              "      <th>kcm</th>\n",
              "      <th>troponin</th>\n",
              "      <th>class</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>81</th>\n",
              "      <td>80</td>\n",
              "      <td>0</td>\n",
              "      <td>65</td>\n",
              "      <td>112</td>\n",
              "      <td>58</td>\n",
              "      <td>222.0</td>\n",
              "      <td>2.91</td>\n",
              "      <td>0.048</td>\n",
              "      <td>positive</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>409</th>\n",
              "      <td>70</td>\n",
              "      <td>1</td>\n",
              "      <td>90</td>\n",
              "      <td>105</td>\n",
              "      <td>52</td>\n",
              "      <td>85.0</td>\n",
              "      <td>2.55</td>\n",
              "      <td>0.005</td>\n",
              "      <td>negative</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>960</th>\n",
              "      <td>47</td>\n",
              "      <td>0</td>\n",
              "      <td>85</td>\n",
              "      <td>138</td>\n",
              "      <td>98</td>\n",
              "      <td>321.0</td>\n",
              "      <td>1.88</td>\n",
              "      <td>0.880</td>\n",
              "      <td>positive</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1187</th>\n",
              "      <td>73</td>\n",
              "      <td>0</td>\n",
              "      <td>81</td>\n",
              "      <td>150</td>\n",
              "      <td>75</td>\n",
              "      <td>125.0</td>\n",
              "      <td>1.44</td>\n",
              "      <td>0.014</td>\n",
              "      <td>negative</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>425</th>\n",
              "      <td>60</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>106</td>\n",
              "      <td>73</td>\n",
              "      <td>134.0</td>\n",
              "      <td>2.82</td>\n",
              "      <td>0.009</td>\n",
              "      <td>negative</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>82</th>\n",
              "      <td>50</td>\n",
              "      <td>1</td>\n",
              "      <td>93</td>\n",
              "      <td>119</td>\n",
              "      <td>63</td>\n",
              "      <td>174.0</td>\n",
              "      <td>300.00</td>\n",
              "      <td>0.888</td>\n",
              "      <td>positive</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>129</th>\n",
              "      <td>60</td>\n",
              "      <td>1</td>\n",
              "      <td>86</td>\n",
              "      <td>135</td>\n",
              "      <td>65</td>\n",
              "      <td>187.0</td>\n",
              "      <td>35.55</td>\n",
              "      <td>0.006</td>\n",
              "      <td>positive</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>387</th>\n",
              "      <td>68</td>\n",
              "      <td>1</td>\n",
              "      <td>74</td>\n",
              "      <td>124</td>\n",
              "      <td>67</td>\n",
              "      <td>96.0</td>\n",
              "      <td>96.02</td>\n",
              "      <td>0.098</td>\n",
              "      <td>positive</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1127</th>\n",
              "      <td>60</td>\n",
              "      <td>0</td>\n",
              "      <td>89</td>\n",
              "      <td>111</td>\n",
              "      <td>57</td>\n",
              "      <td>194.0</td>\n",
              "      <td>2.17</td>\n",
              "      <td>0.348</td>\n",
              "      <td>positive</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>703</th>\n",
              "      <td>48</td>\n",
              "      <td>0</td>\n",
              "      <td>82</td>\n",
              "      <td>125</td>\n",
              "      <td>61</td>\n",
              "      <td>125.0</td>\n",
              "      <td>3.47</td>\n",
              "      <td>0.003</td>\n",
              "      <td>negative</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2da47f47-5f72-4172-b39c-58f431b7caee')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2da47f47-5f72-4172-b39c-58f431b7caee button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2da47f47-5f72-4172-b39c-58f431b7caee');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0cc3be7a-bbff-4329-ab3a-cc1d7b54e241\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0cc3be7a-bbff-4329-ab3a-cc1d7b54e241')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0cc3be7a-bbff-4329-ab3a-cc1d7b54e241 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "      age  gender  impluse  pressurehight  pressurelow  glucose     kcm  \\\n",
              "81     80       0       65            112           58    222.0    2.91   \n",
              "409    70       1       90            105           52     85.0    2.55   \n",
              "960    47       0       85            138           98    321.0    1.88   \n",
              "1187   73       0       81            150           75    125.0    1.44   \n",
              "425    60       0       60            106           73    134.0    2.82   \n",
              "82     50       1       93            119           63    174.0  300.00   \n",
              "129    60       1       86            135           65    187.0   35.55   \n",
              "387    68       1       74            124           67     96.0   96.02   \n",
              "1127   60       0       89            111           57    194.0    2.17   \n",
              "703    48       0       82            125           61    125.0    3.47   \n",
              "\n",
              "      troponin     class  \n",
              "81       0.048  positive  \n",
              "409      0.005  negative  \n",
              "960      0.880  positive  \n",
              "1187     0.014  negative  \n",
              "425      0.009  negative  \n",
              "82       0.888  positive  \n",
              "129      0.006  positive  \n",
              "387      0.098  positive  \n",
              "1127     0.348  positive  \n",
              "703      0.003  negative  "
            ]
          },
          "execution_count": 48,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data.head(10)\n",
        "data.sample(10)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ZjWhPi4fBMrq"
      },
      "source": [
        "### info datanya (total number rows, total number of columns, datatypes of each column, memory requirement)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pY9bAvL9BS61",
        "outputId": "17c95087-d592-481f-8407-5f8ff9ba12f4"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 1319 entries, 0 to 1318\n",
            "Data columns (total 9 columns):\n",
            " #   Column         Non-Null Count  Dtype  \n",
            "---  ------         --------------  -----  \n",
            " 0   age            1319 non-null   int64  \n",
            " 1   gender         1319 non-null   int64  \n",
            " 2   impluse        1319 non-null   int64  \n",
            " 3   pressurehight  1319 non-null   int64  \n",
            " 4   pressurelow    1319 non-null   int64  \n",
            " 5   glucose        1319 non-null   float64\n",
            " 6   kcm            1319 non-null   float64\n",
            " 7   troponin       1319 non-null   float64\n",
            " 8   class          1319 non-null   object \n",
            "dtypes: float64(3), int64(5), object(1)\n",
            "memory usage: 92.9+ KB\n"
          ]
        }
      ],
      "source": [
        "data.info()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "OLWTFZuQCGWg"
      },
      "source": [
        "### Panjang data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "YlCYAXRpCLDS",
        "outputId": "ee1d6508-9f59-43ad-dfbe-435716118ec3"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-bdda424a-a0dd-4130-94e1-e763d9d0bad7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>gender</th>\n",
              "      <th>impluse</th>\n",
              "      <th>pressurehight</th>\n",
              "      <th>pressurelow</th>\n",
              "      <th>glucose</th>\n",
              "      <th>kcm</th>\n",
              "      <th>troponin</th>\n",
              "      <th>class</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1309</th>\n",
              "      <td>47</td>\n",
              "      <td>1</td>\n",
              "      <td>94</td>\n",
              "      <td>105</td>\n",
              "      <td>81</td>\n",
              "      <td>135.0</td>\n",
              "      <td>36.24</td>\n",
              "      <td>0.263</td>\n",
              "      <td>positive</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1310</th>\n",
              "      <td>70</td>\n",
              "      <td>0</td>\n",
              "      <td>80</td>\n",
              "      <td>135</td>\n",
              "      <td>75</td>\n",
              "      <td>351.0</td>\n",
              "      <td>2.21</td>\n",
              "      <td>10.000</td>\n",
              "      <td>positive</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1311</th>\n",
              "      <td>85</td>\n",
              "      <td>1</td>\n",
              "      <td>112</td>\n",
              "      <td>115</td>\n",
              "      <td>69</td>\n",
              "      <td>114.0</td>\n",
              "      <td>2.19</td>\n",
              "      <td>0.062</td>\n",
              "      <td>positive</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1312</th>\n",
              "      <td>48</td>\n",
              "      <td>1</td>\n",
              "      <td>84</td>\n",
              "      <td>118</td>\n",
              "      <td>68</td>\n",
              "      <td>96.0</td>\n",
              "      <td>5.33</td>\n",
              "      <td>0.006</td>\n",
              "      <td>negative</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1313</th>\n",
              "      <td>86</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>179</td>\n",
              "      <td>68</td>\n",
              "      <td>147.0</td>\n",
              "      <td>5.22</td>\n",
              "      <td>0.011</td>\n",
              "      <td>negative</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1314</th>\n",
              "      <td>44</td>\n",
              "      <td>1</td>\n",
              "      <td>94</td>\n",
              "      <td>122</td>\n",
              "      <td>67</td>\n",
              "      <td>204.0</td>\n",
              "      <td>1.63</td>\n",
              "      <td>0.006</td>\n",
              "      <td>negative</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1315</th>\n",
              "      <td>66</td>\n",
              "      <td>1</td>\n",
              "      <td>84</td>\n",
              "      <td>125</td>\n",
              "      <td>55</td>\n",
              "      <td>149.0</td>\n",
              "      <td>1.33</td>\n",
              "      <td>0.172</td>\n",
              "      <td>positive</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1316</th>\n",
              "      <td>45</td>\n",
              "      <td>1</td>\n",
              "      <td>85</td>\n",
              "      <td>168</td>\n",
              "      <td>104</td>\n",
              "      <td>96.0</td>\n",
              "      <td>1.24</td>\n",
              "      <td>4.250</td>\n",
              "      <td>positive</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1317</th>\n",
              "      <td>54</td>\n",
              "      <td>1</td>\n",
              "      <td>58</td>\n",
              "      <td>117</td>\n",
              "      <td>68</td>\n",
              "      <td>443.0</td>\n",
              "      <td>5.80</td>\n",
              "      <td>0.359</td>\n",
              "      <td>positive</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1318</th>\n",
              "      <td>51</td>\n",
              "      <td>1</td>\n",
              "      <td>94</td>\n",
              "      <td>157</td>\n",
              "      <td>79</td>\n",
              "      <td>134.0</td>\n",
              "      <td>50.89</td>\n",
              "      <td>1.770</td>\n",
              "      <td>positive</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bdda424a-a0dd-4130-94e1-e763d9d0bad7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bdda424a-a0dd-4130-94e1-e763d9d0bad7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bdda424a-a0dd-4130-94e1-e763d9d0bad7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1dc91620-b251-4020-b813-00b51560c120\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1dc91620-b251-4020-b813-00b51560c120')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1dc91620-b251-4020-b813-00b51560c120 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "      age  gender  impluse  pressurehight  pressurelow  glucose    kcm  \\\n",
              "1309   47       1       94            105           81    135.0  36.24   \n",
              "1310   70       0       80            135           75    351.0   2.21   \n",
              "1311   85       1      112            115           69    114.0   2.19   \n",
              "1312   48       1       84            118           68     96.0   5.33   \n",
              "1313   86       0       40            179           68    147.0   5.22   \n",
              "1314   44       1       94            122           67    204.0   1.63   \n",
              "1315   66       1       84            125           55    149.0   1.33   \n",
              "1316   45       1       85            168          104     96.0   1.24   \n",
              "1317   54       1       58            117           68    443.0   5.80   \n",
              "1318   51       1       94            157           79    134.0  50.89   \n",
              "\n",
              "      troponin     class  \n",
              "1309     0.263  positive  \n",
              "1310    10.000  positive  \n",
              "1311     0.062  positive  \n",
              "1312     0.006  negative  \n",
              "1313     0.011  negative  \n",
              "1314     0.006  negative  \n",
              "1315     0.172  positive  \n",
              "1316     4.250  positive  \n",
              "1317     0.359  positive  \n",
              "1318     1.770  positive  "
            ]
          },
          "execution_count": 50,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data.tail(10)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "W89ofCtVCWFe"
      },
      "source": [
        "### Bentuk datasetnya (rows, columns)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vUPppjCQCfaJ",
        "outputId": "49f08dce-5eed-4e22-8fbd-1654d40a7c97"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "(1319, 9)"
            ]
          },
          "execution_count": 51,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data.shape"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QxLq_BN5CnuV"
      },
      "source": [
        "### Print rows and columns (baris dan kolom)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hqroY2CSC3-2",
        "outputId": "f2de065a-c555-45c8-ca93-baeb80c6257f"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Total Baris :  1319\n",
            "Total Kolom :  9\n"
          ]
        }
      ],
      "source": [
        "print (\"Total Baris : \", data.shape[0])\n",
        "print(\"Total Kolom : \", data.shape[1])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "26HJ5fIwDPHR"
      },
      "source": [
        "### Check null values in the dataset\n",
        "***false*** -> notnull(keisi)\n",
        "\n",
        "***true*** -> null(kosong)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "StpHw845Dlkh",
        "outputId": "c3a1ee62-e360-4931-aded-1ef775780073"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-f792f2ba-b9a7-44ed-a37a-f7466d4c767c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>gender</th>\n",
              "      <th>impluse</th>\n",
              "      <th>pressurehight</th>\n",
              "      <th>pressurelow</th>\n",
              "      <th>glucose</th>\n",
              "      <th>kcm</th>\n",
              "      <th>troponin</th>\n",
              "      <th>class</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1314</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1315</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1316</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1317</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1318</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1319 rows × 9 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f792f2ba-b9a7-44ed-a37a-f7466d4c767c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f792f2ba-b9a7-44ed-a37a-f7466d4c767c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f792f2ba-b9a7-44ed-a37a-f7466d4c767c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6db74760-c25c-4b4e-8372-7d8cd4cbee92\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6db74760-c25c-4b4e-8372-7d8cd4cbee92')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6db74760-c25c-4b4e-8372-7d8cd4cbee92 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "        age  gender  impluse  pressurehight  pressurelow  glucose    kcm  \\\n",
              "0     False   False    False          False        False    False  False   \n",
              "1     False   False    False          False        False    False  False   \n",
              "2     False   False    False          False        False    False  False   \n",
              "3     False   False    False          False        False    False  False   \n",
              "4     False   False    False          False        False    False  False   \n",
              "...     ...     ...      ...            ...          ...      ...    ...   \n",
              "1314  False   False    False          False        False    False  False   \n",
              "1315  False   False    False          False        False    False  False   \n",
              "1316  False   False    False          False        False    False  False   \n",
              "1317  False   False    False          False        False    False  False   \n",
              "1318  False   False    False          False        False    False  False   \n",
              "\n",
              "      troponin  class  \n",
              "0        False  False  \n",
              "1        False  False  \n",
              "2        False  False  \n",
              "3        False  False  \n",
              "4        False  False  \n",
              "...        ...    ...  \n",
              "1314     False  False  \n",
              "1315     False  False  \n",
              "1316     False  False  \n",
              "1317     False  False  \n",
              "1318     False  False  \n",
              "\n",
              "[1319 rows x 9 columns]"
            ]
          },
          "execution_count": 53,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data.isnull()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FPu0BSiqD0pi"
      },
      "source": [
        "### Total null values / Cek missing values"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hLwm4M4JFt18",
        "outputId": "9c34bf91-b494-47e6-c7b3-16bbf75f3435"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "age              0\n",
              "gender           0\n",
              "impluse          0\n",
              "pressurehight    0\n",
              "pressurelow      0\n",
              "glucose          0\n",
              "kcm              0\n",
              "troponin         0\n",
              "class            0\n",
              "dtype: int64"
            ]
          },
          "execution_count": 54,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data.isnull().sum()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fwlZNTVjQb8I"
      },
      "source": [
        "### Mengecek duplikasi data\n",
        "True ➡ duplicate\n",
        "\n",
        "False ➡ no duplicate"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ex9HEFLaQjW8",
        "outputId": "1f229063-82e3-40e0-c815-a2bbd560c2b4"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "False\n"
          ]
        }
      ],
      "source": [
        "data_duplicate = data.duplicated().any()\n",
        "print(data_duplicate)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "KEy7Rv2IRXLh"
      },
      "source": [
        "### Mengatasi duplikasi data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "XMIN2EL_RdfN"
      },
      "outputs": [],
      "source": [
        "data = data.drop_duplicates()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tg6X4hCwRlLb"
      },
      "source": [
        "### Cek lagi data shapenya setelah proses remove data duplicate\n",
        "\n",
        "( setelah dicek lagi, terdapat perubahan pada rows(baris) atau tidak? )"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "K6y3ggATRshx",
        "outputId": "94d00a60-62ba-4161-d3c3-cd046c0b0431"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "(1319, 9)"
            ]
          },
          "execution_count": 57,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data.shape"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "roEhj3omW8rs"
      },
      "source": [
        "### Describe (mean,count,std,min dll)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "2FDKMJpXXFbE",
        "outputId": "f709a4ee-3100-4f4e-85af-4f6bdfbf873b"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-5228821f-7ec5-4d57-b419-49cf460d206e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>gender</th>\n",
              "      <th>impluse</th>\n",
              "      <th>pressurehight</th>\n",
              "      <th>pressurelow</th>\n",
              "      <th>glucose</th>\n",
              "      <th>kcm</th>\n",
              "      <th>troponin</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1319.000000</td>\n",
              "      <td>1319.000000</td>\n",
              "      <td>1319.000000</td>\n",
              "      <td>1319.000000</td>\n",
              "      <td>1319.000000</td>\n",
              "      <td>1319.000000</td>\n",
              "      <td>1319.000000</td>\n",
              "      <td>1319.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>56.191812</td>\n",
              "      <td>0.659591</td>\n",
              "      <td>78.336619</td>\n",
              "      <td>127.170584</td>\n",
              "      <td>72.269143</td>\n",
              "      <td>146.634344</td>\n",
              "      <td>15.274306</td>\n",
              "      <td>0.360942</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>13.647315</td>\n",
              "      <td>0.474027</td>\n",
              "      <td>51.630270</td>\n",
              "      <td>26.122720</td>\n",
              "      <td>14.033924</td>\n",
              "      <td>74.923045</td>\n",
              "      <td>46.327083</td>\n",
              "      <td>1.154568</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>14.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>20.000000</td>\n",
              "      <td>42.000000</td>\n",
              "      <td>38.000000</td>\n",
              "      <td>35.000000</td>\n",
              "      <td>0.321000</td>\n",
              "      <td>0.001000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>47.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>64.000000</td>\n",
              "      <td>110.000000</td>\n",
              "      <td>62.000000</td>\n",
              "      <td>98.000000</td>\n",
              "      <td>1.655000</td>\n",
              "      <td>0.006000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>58.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>74.000000</td>\n",
              "      <td>124.000000</td>\n",
              "      <td>72.000000</td>\n",
              "      <td>116.000000</td>\n",
              "      <td>2.850000</td>\n",
              "      <td>0.014000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>65.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>85.000000</td>\n",
              "      <td>143.000000</td>\n",
              "      <td>81.000000</td>\n",
              "      <td>169.500000</td>\n",
              "      <td>5.805000</td>\n",
              "      <td>0.085500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>103.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1111.000000</td>\n",
              "      <td>223.000000</td>\n",
              "      <td>154.000000</td>\n",
              "      <td>541.000000</td>\n",
              "      <td>300.000000</td>\n",
              "      <td>10.300000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5228821f-7ec5-4d57-b419-49cf460d206e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5228821f-7ec5-4d57-b419-49cf460d206e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5228821f-7ec5-4d57-b419-49cf460d206e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4328ec08-4d6b-4f89-8ac4-38eee33e6d16\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4328ec08-4d6b-4f89-8ac4-38eee33e6d16')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4328ec08-4d6b-4f89-8ac4-38eee33e6d16 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "               age       gender      impluse  pressurehight  pressurelow  \\\n",
              "count  1319.000000  1319.000000  1319.000000    1319.000000  1319.000000   \n",
              "mean     56.191812     0.659591    78.336619     127.170584    72.269143   \n",
              "std      13.647315     0.474027    51.630270      26.122720    14.033924   \n",
              "min      14.000000     0.000000    20.000000      42.000000    38.000000   \n",
              "25%      47.000000     0.000000    64.000000     110.000000    62.000000   \n",
              "50%      58.000000     1.000000    74.000000     124.000000    72.000000   \n",
              "75%      65.000000     1.000000    85.000000     143.000000    81.000000   \n",
              "max     103.000000     1.000000  1111.000000     223.000000   154.000000   \n",
              "\n",
              "           glucose          kcm     troponin  \n",
              "count  1319.000000  1319.000000  1319.000000  \n",
              "mean    146.634344    15.274306     0.360942  \n",
              "std      74.923045    46.327083     1.154568  \n",
              "min      35.000000     0.321000     0.001000  \n",
              "25%      98.000000     1.655000     0.006000  \n",
              "50%     116.000000     2.850000     0.014000  \n",
              "75%     169.500000     5.805000     0.085500  \n",
              "max     541.000000   300.000000    10.300000  "
            ]
          },
          "execution_count": 58,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data.describe()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RYm81FBPXPDU"
      },
      "source": [
        "### Mengetahui Kolom"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dG340EHEXT0V",
        "outputId": "fce5a1ad-ca69-4d03-8151-46c6f6049e96"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "Index(['age', 'gender', 'impluse', 'pressurehight', 'pressurelow', 'glucose',\n",
              "       'kcm', 'troponin', 'class'],\n",
              "      dtype='object')"
            ]
          },
          "execution_count": 59,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data.columns"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zoP0U_luXZfW"
      },
      "source": [
        "### Menghitung jumlah per kolom\n",
        "e.g : menghitung banyaknya `output`"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "z1dv6WGoXm8N",
        "outputId": "1af913dd-66cc-4485-ac49-242e646a45ff"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "positive    810\n",
              "negative    509\n",
              "Name: class, dtype: int64"
            ]
          },
          "execution_count": 60,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data['class'].value_counts()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qQTH0oI9mdrj"
      },
      "source": [
        "### Menampilkan 1 kolom data\n",
        "e.g : menampilkan kolom `age`"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SOtuywjcm19-",
        "outputId": "b8b19d18-8c74-4c48-f039-bb94ad0c5e5d"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "0       64\n",
              "1       21\n",
              "2       55\n",
              "3       64\n",
              "4       55\n",
              "        ..\n",
              "1314    44\n",
              "1315    66\n",
              "1316    45\n",
              "1317    54\n",
              "1318    51\n",
              "Name: age, Length: 1319, dtype: int64"
            ]
          },
          "execution_count": 61,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "age = data['age']\n",
        "age"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yi_1MADtnOkQ"
      },
      "source": [
        "### Menampilkan 2 kolom (dualist)\n",
        "e.g : menampilkan kolom `age` dan `gender`"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "vHmDEGhSnXiv",
        "outputId": "823ef978-0119-4741-eb06-4159d7edb699"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-3d71ccbb-5de1-4dfa-8b9d-828713590ddf\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>gender</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>64</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>55</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>64</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>55</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1314</th>\n",
              "      <td>44</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1315</th>\n",
              "      <td>66</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1316</th>\n",
              "      <td>45</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1317</th>\n",
              "      <td>54</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1318</th>\n",
              "      <td>51</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1319 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d71ccbb-5de1-4dfa-8b9d-828713590ddf')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3d71ccbb-5de1-4dfa-8b9d-828713590ddf button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3d71ccbb-5de1-4dfa-8b9d-828713590ddf');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-fcfaf0c0-40c2-4c02-b93b-585aa05444e8\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fcfaf0c0-40c2-4c02-b93b-585aa05444e8')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-fcfaf0c0-40c2-4c02-b93b-585aa05444e8 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "      age  gender\n",
              "0      64       1\n",
              "1      21       1\n",
              "2      55       1\n",
              "3      64       1\n",
              "4      55       1\n",
              "...   ...     ...\n",
              "1314   44       1\n",
              "1315   66       1\n",
              "1316   45       1\n",
              "1317   54       1\n",
              "1318   51       1\n",
              "\n",
              "[1319 rows x 2 columns]"
            ]
          },
          "execution_count": 62,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "dualist = data[['age','gender']]\n",
        "dualist"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "F_7a9Q9Yni4a"
      },
      "source": [
        "### Menampilkan 3 kolom (multilist)\n",
        "e.g : menampilkan kolom `age`, `gender`, dan `impluse`"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "lqgaYB3tn1fA",
        "outputId": "e32dbd28-b11c-49f8-ec34-cb284e385b2e"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-00009520-9991-4991-ba65-bbb5593fb902\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>gender</th>\n",
              "      <th>impluse</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>64</td>\n",
              "      <td>1</td>\n",
              "      <td>66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>55</td>\n",
              "      <td>1</td>\n",
              "      <td>64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>64</td>\n",
              "      <td>1</td>\n",
              "      <td>70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>55</td>\n",
              "      <td>1</td>\n",
              "      <td>64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1314</th>\n",
              "      <td>44</td>\n",
              "      <td>1</td>\n",
              "      <td>94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1315</th>\n",
              "      <td>66</td>\n",
              "      <td>1</td>\n",
              "      <td>84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1316</th>\n",
              "      <td>45</td>\n",
              "      <td>1</td>\n",
              "      <td>85</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1317</th>\n",
              "      <td>54</td>\n",
              "      <td>1</td>\n",
              "      <td>58</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1318</th>\n",
              "      <td>51</td>\n",
              "      <td>1</td>\n",
              "      <td>94</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1319 rows × 3 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-00009520-9991-4991-ba65-bbb5593fb902')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-00009520-9991-4991-ba65-bbb5593fb902 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-00009520-9991-4991-ba65-bbb5593fb902');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7ef4a064-de09-4e35-b9b3-d48b83aca29f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7ef4a064-de09-4e35-b9b3-d48b83aca29f')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7ef4a064-de09-4e35-b9b3-d48b83aca29f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "      age  gender  impluse\n",
              "0      64       1       66\n",
              "1      21       1       94\n",
              "2      55       1       64\n",
              "3      64       1       70\n",
              "4      55       1       64\n",
              "...   ...     ...      ...\n",
              "1314   44       1       94\n",
              "1315   66       1       84\n",
              "1316   45       1       85\n",
              "1317   54       1       58\n",
              "1318   51       1       94\n",
              "\n",
              "[1319 rows x 3 columns]"
            ]
          },
          "execution_count": 63,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "multilist = data[['age','gender','impluse']]\n",
        "multilist"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PsW1rmlAH7W_",
        "outputId": "9a343ba0-e875-477f-a1f3-4b66d47b29d1"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "      age  gender  impluse\n",
            "0      64       1       66\n",
            "1      21       1       94\n",
            "2      55       1       64\n",
            "3      64       1       70\n",
            "4      55       1       64\n",
            "...   ...     ...      ...\n",
            "1314   44       1       94\n",
            "1315   66       1       84\n",
            "1316   45       1       85\n",
            "1317   54       1       58\n",
            "1318   51       1       94\n",
            "\n",
            "[1319 rows x 3 columns]\n"
          ]
        }
      ],
      "source": [
        "print(multilist)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-VyvqbH3XvyX"
      },
      "source": [
        "### Membuat plot\n",
        "dengan `sns.countplot(x=[row], data=[dataname])`\n",
        "\n",
        "e.g : berapa jumlah orang yang **mempunyai heart disease (positive)** dan **tidak mempunyai heart disease (negative)** ?"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "OymiL-6xznHC"
      },
      "source": [
        "# Target"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 475
        },
        "id": "mUqBEVXHYIrB",
        "outputId": "20243891-0b2e-478a-c009-1693196bb9bf"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "<Axes: xlabel='class', ylabel='count'>"
            ]
          },
          "execution_count": 65,
          "metadata": {},
          "output_type": "execute_result"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "sns.countplot(x='class', data=data)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1HHK2Ji4YaEr"
      },
      "source": [
        "### Menghitung banyaknya `gender`\n",
        "\n",
        " [male & female]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "h04QIcTIYh1_",
        "outputId": "a2cda966-0049-4a0e-c58b-174bacf35312"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "1    870\n",
              "0    449\n",
              "Name: gender, dtype: int64"
            ]
          },
          "execution_count": 66,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data['gender'].value_counts()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lyClQpU_MmGh"
      },
      "source": [
        "### Memberikan label pada plot `sns`\n",
        "e.g : label pada atribut `gender`.\n",
        "\n",
        "0 : female\n",
        "\n",
        "1 : male"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 458
        },
        "id": "-V1U1jRKNDWd",
        "outputId": "4fd9327c-8d08-481c-87ca-89cfabfd0f36"
      },
      "outputs": [
        {
          "data": {
            "image/png": "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8Lvf/S5iTVnnknR8+vTpw9tvv82BAwfC2956661Sb6Vv2rSJkSNHcuGFF9K6dWt69erF008/fcS33v7eq6++St++fUlNTaVLly5MmzaN4uLiE/5cFH2eKVKlVlRUFHE7Pj6et99+m5EjR9KvXz+GDRvG999/z9SpUykoKGDatGkR6ydMmMAVV1zBgAEDWLhwIXfddRdffPEFX331Fffffz95eXlMmTKFRo0a8e///u8A7Ny5k5o1a3L33XcTDAbZvHkzM2bM4Pvvv2fy5MlHnXXJkiXHPJekY3PRRRdxzz33sHLlSrp27crGjRvZsGEDs2bNIjs7O7xu+/btJCcn07dvX6pXr8769euZMWMGhYWFDB069KjHf+aZZ3jkkUe4/vrrGTNmDJs2bQpH0ahRo07GU9RJZBSp0iosLOS8886L2PbQQw8xffp0evXqxW9/+9vw9rp163LzzTdz6623cs4554S3X3rppeEfiK1ateKdd95h8eLFvPPOOyQkJADw5z//mSVLloSjKCUlhdGjR4ePccEFF5CYmMiYMWMYP348iYmJpWYNhUI8/PDDxzyXpGOTmJhIt27dWLx4MV27duWtt96iTZs2NGrUKGJdeno66enpwMHX489//nP27t3L/PnzjxpFP/74I9OnT2fw4MHccccdAHTq1ImEhASmTJnCTTfdRK1atSr2CeqkMopUaZ122mnMnz8/YltJSQlbt25l7NixEWeR2rVrRyAQYO3atRHx0alTp/Df16hRg9q1a9O2bdtwEAE0bdqU1atXh2+HQiGee+45Fi5cyJYtW9i3b194X15eHi1atCg1a25u7nHNJenY9enThzvvvJO9e/eSnZ3NoEGDSq3Zt28fv//973nzzTf59ttvI95u2717N9WrVy91nzVr1lBYWMill14a8brt2LEje/fu5auvvqJdu3YV86QUFUaRKq1AIEBqamrEto8//hiA22677Yj3+fbbbyNu16hRI+J21apVCQaDEdsSEhIirhd67rnneOihhxg8eDDt27cnGAzyl7/8hQceeCAikA63c+fO45pL0rHr3LkzCQkJPP7442zZsoXMzMxSax555BEWLVrEbbfdxvnnn0+NGjVYtmwZc+bMYd++fUeMokOv2yuuuOKIj+vr9tRjFOmUUrNmTQDGjx9Pq1atSu2vV69euR9jyZIldOvWjTvvvDO8bdOmTVGfS/qpSkhIoEePHjz77LOkp6fzs5/9rNSaJUuWcNVVV3HzzTeHt73//vv/8LhJSUkAzJw5kwYNGpTa37Bhw3JOrlhjFOmU0qxZMxo0aEBeXh6//vWvK+Qx9u7dG/H2GhD+1Fo055J+yvr378/f/vY3BgwYcMT9+/bti3jdFhcXs3jx4n94zDZt2pCYmMi2bdu45JJLTui8ik1GkU4pcXFxjBkzhlGjRlFYWEjXrl1JTEzkr3/9K++//z4jR44kOTm5XI/RsWNH5s2bx/z582natClvvPEGX3/9ddTnkn7KWrVqxezZs4+6v2PHjixatIizzz6bWrVq8eKLL/7Tr9EIBoMMHz6cRx55hG3bttGuXTvi4+PJy8tj2bJlzJgx44gfrFDlZRTplJOZmUkwGOSJJ54In8E566yz6NKlyxFPqx+v2267jZ07dzJ9+nQAevbsybhx48KfTovWXJKO7t577+W+++7jwQcfJDExkSuuuIJLLrmEcePG/cP73XjjjdSvX59nnnmG+fPnU6VKFRo3bkzXrl1LnTFW5RcXCoVC0R5CkiQp2vxGa0mSJIwiSZIkwCiSJEkCjCJJkiTAKJIkSQKMIkmSJMAokiRJAowiSTpmq1evJiUlhdWrV0d7FEkVwCiSJEnCKJIkSQKMIkmKmsLCwmiPIOkwRpGkmLZ69Wr69etHamoqF198MQsWLGDGjBmkpKRErHv99dfp168frVq1ol27dowcOZJvv/02Ys2gQYPo06cPGzduZNCgQbRu3ZouXbqQlZVV6nG3bdvGrbfeSlpaGunp6UyaNOmov1X9008/5aabbuLnP/85rVu35tprr+Xjjz+OWHNo5o0bN3LnnXfyi1/8gmuuuaacfzqSTqQq0R5Ako5m3bp1DB48mLp16zJs2DBKSkqYNWsWtWvXjlg3Z84cHn/8cTIzM7nyyivZsWMH8+fP59e//jWvvfYawWAwvDY/P5/BgwdzySWXkJmZydtvv82jjz5KixYtuPDCCwHYu3cv119/Pd9++y2DBg2iXr16vP766/zpT38qNeOqVasYMmQI559/PkOHDiUuLo5XX32V66+/nhdffJFWrVpFrL/99ttp0qQJI0eOxN/HLcWYkCTFqFtuuSXUunXr0LZt28LbNm/eHDr33HNDLVq0CIVCodCWLVtCLVu2DM2ZMyfivhs2bAide+65EduvvfbaUIsWLUJ/+MMfwtv27dsX6tSpU2jYsGHhbc8++2yoRYsWoezs7PC2wsLC0CWXXBJq0aJF6E9/+lMoFAqFSkpKQj169AjdeOONoZKSkvDaPXv2hLp16xa64YYbwtumT58eatGiReiOO+4o55+KpIri22eSYlJxcTGrVq2ie/fu1K9fP7y9SZMmdOnSJXz7nXfeoaSkhMzMTHbs2BH+62c/+xlNmjQp9fH5008/ncsvvzx8u2rVqqSmppKXlxfetnz5curWrcull14a3paYmMiAAQMijrV+/Xo2b95M37592blzZ/ixCwsLSU9P58MPP6SkpCTiPgMHDizfH4ykCuPbZ5Ji0t/+9jf27t1LkyZNSu07fNvmzZsJhUL06NHjiMepUiXyx1yDBg2Ii4uL2JaUlMSGDRvCt7du3UqTJk1KrUtOTo64vXnzZgBGjx591Oexa9cukpKSwrcbNmx41LWSossoklSplZSUEBcXR1ZWFvHx8aX2n3766RG3j7SmrEL//5qgu+66i5YtWx5xzd8/frVq1U7Y40s6sYwiSTGpTp06VKtWja+//rrUvsO3NW7cmFAoRMOGDUudySmrs846iy+//JJQKBRxtig3NzdiXaNGjQA444wz6Nix4wl5bEnR4zVFkmJSfHw8HTt2ZNmyZXz33Xfh7V9//TUffPBB+HaPHj2Ij49n5syZpT7NFQqF2Llz53E/dkZGBtu3b2fJkiXhbXv27GHhwoUR684//3waN27M008/ze7du0sdZ8eOHcf92JKixzNFkmLW0KFDWbFiBVdffTVXX301JSUlzJ8/n3POOYf169cDB88UjRgxgqlTp7J161YuvvhiqlevzpYtW3j33XcZMGAAN91003E97oABA3jhhRcYPXo0n3/+OXXr1uX111/ntNNOi1gXCASYOHEiQ4YMoU+fPvTr14/69evz3XffsXr1as444wyeeOKJE/bnIaliGUWSYtb5559PVlYWDz/8MI8//jj/8i//wvDhw8nJySEnJye87uabb6Zp06Y8++yzzJo1Czh4QXWnTp3o1q3bcT9uYmIizz77LA8++CDz58/ntNNOo2/fvmRkZDB48OCIte3bt+ell15i9uzZzJ8/n8LCQurWrUurVq246qqryvcHIOmkigv9/flmSYpxt956Kxs3bmTp0qXRHkXSKcRriiTFtL1790bc3rx5M8uXL6ddu3ZRmkjSqcq3zyTFtIsvvpgrrriCRo0asXXrVhYsWEBCQkKpt7EkqbyMIkkxrUuXLixevJjvv/+eqlWrkpaWxh133EHTpk2jPZqkU4zXFEmSJOE1RZIkSYBRJEmSBBhFkiRJgFEkSZIEGEWSJEmAUSRJkgQYRZIkSYBRJEmSBBhFkiRJAPw/IwPz3BXxhRwAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "sns.countplot(x=\"gender\", data=data)\n",
        "plt.xticks([0,1],['Female','Male'])\n",
        "plt.show() #menampilkan data visual"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RV-XxP60NaHT"
      },
      "source": [
        "Mengetahui `class` berdasarkan `gender` yg terkena heart disease\n",
        "\n",
        "ket :\n",
        "\n",
        "`plt.legend()` :\n",
        "*   Library `matplotlib.pyplot `\n",
        "*   Label data dalam plot agar lebih mempermudah kita dalam membaca data\n",
        "\n",
        "`plt.show()` : menampilkan data visual"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 458
        },
        "id": "HHClin2sNj7a",
        "outputId": "787a53fd-5c95-4c39-ea2f-ff54beac6d71"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "sns.countplot(x='gender', hue=\"class\", data=data)\n",
        "plt.xticks([0,1],['Female','Male'])\n",
        "plt.legend(labels=['No-Disease','Disease']) #ini dari matplotlib.pyplot #merupakan label data dalam plot agar lebih mempermudah kita dalam membaca data.\n",
        "plt.show() #menampilkan data visual"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 444
        },
        "id": "JGOkok4HifuO",
        "outputId": "0fa168d6-9177-450e-95b5-eb8504b04704"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "# Pie Chart\n",
        "gender_counts = data['gender'].value_counts()\n",
        "labels = ['Male', 'Female']\n",
        "sizes = gender_counts.values\n",
        "colors = ['lightcoral', 'lightskyblue']  # warna pie chart\n",
        "\n",
        "plt.figure(figsize=(5, 5))\n",
        "plt.pie(gender_counts, labels=labels, colors=colors, autopct='%1.1f%%', startangle=140)\n",
        "plt.title('Pie Chart: Proporsi Kategori Target')\n",
        "plt.show()\n",
        "\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2JPUbagnh8cO"
      },
      "source": [
        "dataset ini sebagian besar terdiri dari laki-laki (66%), dan laki-laki lebih mungkin menderita penyakit jantung daripada perempuan."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dUDtMiwPW4XV"
      },
      "source": [
        "# Age"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fYfQPpMxhtmC"
      },
      "source": [
        "Age, dataset ini mencakup usia dari anak-anak hingga orang tua, dan dapat dilihat bahwa orang dengan penyakit jantung berusia lebih tua daripada mereka yang tidak memiliki penyakit jantung."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 357
        },
        "id": "RAW1Zr5GW7EW",
        "outputId": "045dad5d-76a6-4448-9908-0375a98d898f"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1300x500 with 3 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "fig, axes = plt.subplots(1, 3, figsize=(13, 5))\n",
        "plt.suptitle('Age', fontsize=25, fontweight='bold', color='navy')\n",
        "fig.tight_layout(pad=2.0)\n",
        "# ax1\n",
        "sns.scatterplot(data=data, x='age', y='class', ax=axes[0], hue='class')\n",
        "\n",
        "# ax2\n",
        "sns.histplot(data=data, x='age', ax=axes[1])\n",
        "\n",
        "# ax3\n",
        "sns.boxplot(data=data, x='age', y='class', ax=axes[2])\n",
        "\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eU7ZouhtZQcG"
      },
      "source": [
        "# Impulse"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 414
        },
        "id": "DM7Y5C5sXDFM",
        "outputId": "0c5177f4-88fa-475e-c37f-0d1d91efbecd"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1300x500 with 3 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "fig, axes = plt.subplots(1, 3, figsize=(13, 5))\n",
        "plt.suptitle('Impluse', fontsize=25, fontweight='bold', color='navy')\n",
        "\n",
        "# ax1\n",
        "sns.scatterplot(data=data, x='impluse', y='class', ax=axes[0], hue='class')\n",
        "\n",
        "# ax2\n",
        "sns.histplot(data=data, x='impluse', ax=axes[1])\n",
        "\n",
        "# ax3\n",
        "sns.boxplot(data=data, x='impluse', y='class', ax=axes[2])\n",
        "\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EyPGiqHBZlfY"
      },
      "source": [
        "**Beberapa nilai terlihat jelas sebagai outlier**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ATn-2JecjwAE"
      },
      "source": [
        "Melihat data yang outlier"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "uS9MKnyGZUtJ",
        "outputId": "1275ac2c-8131-4ec5-b315-5d88b6de1c0f"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-fb488bbb-2354-4499-939b-85949ca055d8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>gender</th>\n",
              "      <th>impluse</th>\n",
              "      <th>pressurehight</th>\n",
              "      <th>pressurelow</th>\n",
              "      <th>glucose</th>\n",
              "      <th>kcm</th>\n",
              "      <th>troponin</th>\n",
              "      <th>class</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>63</th>\n",
              "      <td>45</td>\n",
              "      <td>1</td>\n",
              "      <td>1111</td>\n",
              "      <td>141</td>\n",
              "      <td>95</td>\n",
              "      <td>109.0</td>\n",
              "      <td>1.33</td>\n",
              "      <td>1.010</td>\n",
              "      <td>positive</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>717</th>\n",
              "      <td>70</td>\n",
              "      <td>0</td>\n",
              "      <td>1111</td>\n",
              "      <td>141</td>\n",
              "      <td>95</td>\n",
              "      <td>138.0</td>\n",
              "      <td>3.87</td>\n",
              "      <td>0.028</td>\n",
              "      <td>positive</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1069</th>\n",
              "      <td>32</td>\n",
              "      <td>0</td>\n",
              "      <td>1111</td>\n",
              "      <td>141</td>\n",
              "      <td>95</td>\n",
              "      <td>82.0</td>\n",
              "      <td>2.66</td>\n",
              "      <td>0.008</td>\n",
              "      <td>negative</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fb488bbb-2354-4499-939b-85949ca055d8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-fb488bbb-2354-4499-939b-85949ca055d8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-fb488bbb-2354-4499-939b-85949ca055d8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9a5ab579-f0c9-4bf8-8a9d-e0db5884fe5d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9a5ab579-f0c9-4bf8-8a9d-e0db5884fe5d')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9a5ab579-f0c9-4bf8-8a9d-e0db5884fe5d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "      age  gender  impluse  pressurehight  pressurelow  glucose   kcm  \\\n",
              "63     45       1     1111            141           95    109.0  1.33   \n",
              "717    70       0     1111            141           95    138.0  3.87   \n",
              "1069   32       0     1111            141           95     82.0  2.66   \n",
              "\n",
              "      troponin     class  \n",
              "63       1.010  positive  \n",
              "717      0.028  positive  \n",
              "1069     0.008  negative  "
            ]
          },
          "execution_count": 72,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data[data.impluse > 1000]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "3TWzZwsNZqjG"
      },
      "outputs": [],
      "source": [
        "condition = data.impluse < 1000\n",
        "data = data[condition]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 414
        },
        "id": "TnpEYQs0Zx-6",
        "outputId": "71eb1cd9-ab11-456d-fe07-9fcf732a1ecf"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1300x500 with 3 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "fig, axes = plt.subplots(1, 3, figsize=(13, 5))\n",
        "plt.suptitle('Impluse', fontsize=25, fontweight='bold', color='navy')\n",
        "\n",
        "# ax1\n",
        "sns.scatterplot(data= data, x='impluse', y='class', ax=axes[0], hue='class')\n",
        "\n",
        "# ax2\n",
        "sns.histplot(data= data, x='impluse', ax=axes[1])\n",
        "\n",
        "# ax3\n",
        "sns.boxplot(data= data, x='impluse', y='class', ax=axes[2])\n",
        "\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "l68DrdElaAQg"
      },
      "source": [
        "# Pressure High"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 357
        },
        "id": "jW6BlU8LZ1FL",
        "outputId": "91daffea-f34f-4141-e453-6deafb9efde4"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1300x500 with 3 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "fig, axes = plt.subplots(1, 3, figsize=(13, 5))\n",
        "plt.suptitle('Pressure High', fontsize=25, fontweight='bold', color='navy')\n",
        "fig.tight_layout(pad=2.0)\n",
        "\n",
        "# ax1\n",
        "sns.scatterplot(data=data, x='pressurehight', y='class', ax=axes[0], hue='class')\n",
        "\n",
        "# ax2\n",
        "sns.histplot(data=data, x='pressurehight', ax=axes[1])\n",
        "\n",
        "# ax3\n",
        "sns.boxplot(data=data, x='pressurehight', y='class', ax=axes[2])\n",
        "\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SXdrPR28aMes"
      },
      "source": [
        "# Pressure Low"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 357
        },
        "id": "j9qkp95taFiS",
        "outputId": "2a1ed0df-b721-4ecc-eed2-2943d1bf829f"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1300x500 with 3 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "fig, axes = plt.subplots(1, 3, figsize=(13, 5))\n",
        "plt.suptitle('PressureLow', fontsize=25, fontweight='bold', color='navy')\n",
        "fig.tight_layout(pad=2.0)\n",
        "\n",
        "# ax1\n",
        "sns.scatterplot(data=data, x='pressurelow', y='class', ax=axes[0], hue='class')\n",
        "\n",
        "# ax2\n",
        "sns.histplot(data=data, x='pressurelow', ax=axes[1])\n",
        "\n",
        "# ax3\n",
        "sns.boxplot(data=data, x='pressurelow', y='class')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ADP5TbJGaV8v"
      },
      "source": [
        "# Glucose"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 357
        },
        "id": "DRfMwp6xaPS3",
        "outputId": "cc22863b-cec1-4ee4-9b13-d97679320db9"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1300x500 with 3 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "fig, axes = plt.subplots(1, 3, figsize=(13, 5))\n",
        "plt.suptitle('glucose', fontsize=25, fontweight='bold', color='navy')\n",
        "fig.tight_layout(pad=2.0)\n",
        "\n",
        "# ax1\n",
        "sns.scatterplot(data=data, x='glucose', y='class', ax=axes[0], hue='class')\n",
        "\n",
        "# ax2\n",
        "sns.histplot(data=data, x='glucose', ax=axes[1])\n",
        "\n",
        "# ax3\n",
        "sns.boxplot(data=data, x='glucose', y='class')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "34HQ28FCamtL"
      },
      "source": [
        "# CK-MB"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 357
        },
        "id": "BdJDX4yVaZaH",
        "outputId": "ba55ab2c-43aa-439d-9796-31e8e1a32eda"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1300x500 with 3 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "fig, axes = plt.subplots(1, 3, figsize=(13, 5))\n",
        "plt.suptitle('CK-MB', fontsize=25, fontweight='bold', color='navy')\n",
        "fig.tight_layout(pad=2.0)\n",
        "\n",
        "# ax1\n",
        "sns.scatterplot(data=data, x='kcm', y='class', ax=axes[0], hue='class')\n",
        "\n",
        "# ax2\n",
        "sns.histplot(data=data, x='kcm', ax=axes[1])\n",
        "\n",
        "# ax3\n",
        "sns.boxplot(data=data, x='kcm', y='class')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "eUqE6kLvcH_0"
      },
      "outputs": [],
      "source": [
        "data=data[data['kcm']<235]"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "emOwitw_kFsn"
      },
      "source": [
        "**Terlihat ada beberapa outlier di fitur CK-MB**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2KLzEvyZayg1"
      },
      "source": [
        "# Troponin"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "-LUJKs1UasXG"
      },
      "outputs": [],
      "source": [
        "fig, axes = plt.subplots(1, 3, figsize=(13, 5))\n",
        "plt.suptitle('Troponin', fontsize=25, fontweight='bold', color='navy')\n",
        "fig.tight_layout(pad=2.0)\n",
        "\n",
        "# ax1\n",
        "sns.scatterplot(data=data, x='troponin', y='class', ax=axes[0], hue='class')\n",
        "\n",
        "# ax2\n",
        "sns.histplot(data=data, x='troponin', ax=axes[1])\n",
        "\n",
        "# ax3\n",
        "sns.boxplot(data=data, x='troponin', y='class')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "j0sdlRVLciIv"
      },
      "outputs": [],
      "source": [
        "data=data[data['troponin']<6]"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QPAF8bMkschx"
      },
      "source": [
        "**Terlihat data Troponin ada outlier.**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "U_ZTvcgdkQSW"
      },
      "source": [
        "Diagram-diagram diatas sudah terlihat beberapa ada outlier-outlier data yang perlu dibenahi. Perlakuan tersebut dinamakan cleaning data."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "bFQ8u31vdRwc"
      },
      "outputs": [],
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from sklearn.metrics import accuracy_score"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "i3fPeO3ZdFqK"
      },
      "outputs": [],
      "source": [
        "X = data.drop(columns='class')\n",
        "y = data['class']\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)\n",
        "print('Shape of X_Train set : {}'.format(X_train.shape))\n",
        "print('Shape of y_Train set : {}'.format(y_train.shape))\n",
        "print('_'*50)\n",
        "print('Shape of X_test set : {}'.format(X_test.shape))\n",
        "print('Shape of y_test set : {}'.format(y_test.shape))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "3-xDE0IodkN9",
        "outputId": "78f30455-7c36-4d4b-ad43-21b63f1a8533"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Best Criterion :  gini\n",
            "Best splitter :  best\n",
            "Best depth :  3\n",
            "Accuracy Score :  0.9882352941176471\n"
          ]
        }
      ],
      "source": [
        "\n",
        "criterions = ['gini', 'entropy', 'log_loss']\n",
        "best_criterion = str()\n",
        "splitters = ['best', 'random']\n",
        "best_splitter = str()\n",
        "max_depthes = [None, 3, 4, 5, 6, 7, 8, 9]\n",
        "best_depth = int()\n",
        "best_acc = 0\n",
        "\n",
        "for criterion in criterions :\n",
        "    for splitter in splitters :\n",
        "        for depth in max_depthes :\n",
        "            # Modeling\n",
        "            DTs = DecisionTreeClassifier(criterion=criterion, splitter=splitter, max_depth=depth, random_state=0)\n",
        "            DTs.fit(X_train, y_train)\n",
        "            y_pred = DTs.predict(X_test)\n",
        "            # Score\n",
        "            score = accuracy_score(y_test, y_pred)\n",
        "            # mencari best parameter\n",
        "            if (score > best_acc) and (score < 0.99) :\n",
        "              best_acc = score\n",
        "              best_criterion = criterion\n",
        "              best_splitter = splitter\n",
        "              best_depth = depth\n",
        "            else :\n",
        "                continue\n",
        "print('Best Criterion : ', best_criterion)\n",
        "print('Best splitter : ', best_splitter)\n",
        "print('Best depth : ', best_depth)\n",
        "print('Accuracy Score : ', best_acc)"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
